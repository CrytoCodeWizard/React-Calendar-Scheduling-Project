const t="chart-timeline-grid-row-cell",e="chart-timeline-items-row-item";const i="config.plugin.Selection";function s(i){return Object.assign({enabled:!0,showOverlay:!0,isSelecting:!1,pointerState:"up",selectKey:"",multiKey:"shift",multipleSelection:!0,targetType:"",targetData:null,initialPosition:{x:0,y:0},currentPosition:{x:0,y:0},selectionAreaLocal:{x:0,y:0,width:0,height:0},selectionAreaGlobal:{x:0,y:0,width:0,height:0},selecting:{[e]:[],[t]:[]},selected:{[e]:[],[t]:[]},lastSelected:{[e]:[],[t]:[]},automaticallySelected:{[e]:[],[t]:[]},events:{down:null,move:null,up:null}},i)}class a{constructor(t,a){this.onDestroy=[],this.vido=t,this.state=t.state,this.api=t.api,this.merge=this.state.get("config.merge"),this.state.update(i,s(a)),this.data=s(a),this.slotClassName=this.api.getClass("chart-selection"),this.slotStyleMap=new t.StyleMap({display:"none"}),this.html=t.html,this.slot=this.slot.bind(this),this.destroy=this.destroy.bind(this),this.setSlot(),this.onCellCreate=this.onCellCreate.bind(this),this.apiGetSelection=this.apiGetSelection.bind(this),this.apiGetSelecting=this.apiGetSelecting.bind(this),this.apiGetSelected=this.apiGetSelected.bind(this),this.apiSetSelection=this.apiSetSelection.bind(this),this.apiSelectCells=this.apiSelectCells.bind(this),this.apiSelectItems=this.apiSelectItems.bind(this),this.api.plugins.selection={getSelection:this.apiGetSelection,getSelected:this.apiGetSelected,getSelecting:this.apiGetSelecting,setSelection:this.apiSetSelection,selectCells:this.apiSelectCells,selectItems:this.apiSelectItems},this.state.update("config.chart.grid.cell.onCreate",t=>(t.includes(this.onCellCreate)||t.push(this.onCellCreate),t)),this.onDestroy.push(this.state.subscribe("config.plugin.TimelinePointer",t=>{this.pointerData=t,this.onPointerData()})),this.updateData(),this.onDestroy.push(this.state.subscribe(i,t=>{this.data=t})),this.updateSelectionClassName=this.updateSelectionClassName.bind(this),this.selectedAction=this.selectedAction.bind(this),this.state.update("config.actions.chart-timeline-grid-row-cell",t=>(t.includes(this.selectedAction)||t.push(this.selectedAction),t)),this.state.update("config.actions.chart-timeline-items-row-item",t=>(t.includes(this.selectedAction)||t.push(this.selectedAction),t)),this.onDestroy.push(this.state.subscribe("config.chart.items",t=>{this.data.selected[e]=this.data.selected[e].filter(e=>!!t[e]),this.data.selecting[e]=this.data.selecting[e].filter(e=>!!t[e])},{ignore:["$data.chart.items.*.detached","config.chart.items.*.selected","config.chart.items.*.selecting"]}))}setSlot(){this.state.update("config.slots.chart-timeline-items.outer",t=>(t.includes(this.slot)||t.push(this.slot),t))}destroy(){this.state.update("config.slots.chart-timeline-items.outer",t=>t.filter(t=>t!==this.slot)),this.state.update("config.actions.chart-timeline-grid-row-cell",t=>t.filter(t=>t!==this.selectedAction)),this.state.update("config.actions.chart-timeline-items-row-item",t=>t.filter(t=>t!==this.selectedAction)),this.state.update("config.chart.grid.cell.onCreate",t=>t.filter(t=>t!==this.onCellCreate)),this.onDestroy.forEach(t=>t())}updateData(){this.state.update(i,Object.assign({},this.data)),this.vido.update()}apiSetSelection(t){this.data.selected=this.api.mergeDeep({},t);let e=this.state.multi();e=this.updateCells(e),e=this.updateItems(e),e.done(),this.updateData()}apiSelectCells(e){this.data.selected[t]=[...e];let i=this.state.multi();i=this.updateCells(i),i.done(),this.updateData()}apiSelectItems(t){this.data.selected[e]=[...t];let i=this.state.multi();i=this.updateItems(i),i.done(),this.updateData()}apiGetSelection(){return{selecting:this.getSelectionWithData(this.data.selecting),selected:this.getSelectionWithData(this.data.selected)}}apiGetSelecting(){return this.getSelectionWithData(this.data.selecting)}apiGetSelected(){return this.getSelectionWithData(this.data.selected)}modKeyPressed(t,e){switch(t){case"shift":return e.shiftKey;case"alt":return e.altKey;case"ctrl":return e.ctrlKey}}canSelect(){let t=this.data.enabled;const e=this.pointerData.events.down;return e&&this.data.selectKey&&(t=t&&this.modKeyPressed(this.data.selectKey,e)),t&&(this.data.cells||this.data.items)}getSelectionAreaLocal(){const t={x:0,y:0,width:0,height:0},e=Object.assign({},this.pointerData.initialPosition),i=Object.assign({},this.pointerData.currentPosition),s=i.x-e.x,a=i.y-e.y;return s>=0?(t.x=e.x,t.width=s):(t.x=i.x,t.width=Math.abs(s)),a>=0?(t.y=e.y,t.height=a):(t.y=i.y,t.height=Math.abs(a)),t}translateAreaLocalToGlobal(t){const e=this.state.get("$data.chart.time.leftPx"),i=this.state.get("config.scroll.vertical.posPx");return Object.assign(Object.assign({},t),{x:t.x+e,y:t.y+i})}collectLinkedItems(t,e=this.api.getItemsData()){return[t,...e[t].linkedWith]}getSelectedItem(t){let i,s=this.data.automaticallySelected[e].slice();const a=this.collectLinkedItems(t.id);if(this.data.selected[e].find(e=>e===t.id))if(i=this.data.selected[e],s.find(e=>e===t.id)){const e=s,a=i.find(i=>t.linkedWith.includes(i)&&!e.includes(i));s=s.filter(e=>e!==t.id),s.push(a)}else s=this.data.automaticallySelected[e];else i=this.isMulti()?Array.from(new Set([...this.data.selected[e],...a])):a,s=a.filter(e=>e!==t.id);return i=i.map(e=>(t=this.api.getItem(e),e)),{selected:i,automaticallySelected:s}}isItemVerticallyInsideArea(t,e){if(!e.width||!e.height)return!1;const i=e.y+e.height,s=t.position.viewTop,a=s+t.actualHeight;return s>=e.y&&s<=i||a>=e.y&&a<=i||s>=e.y&&a<=i||s<=e.y&&a>=i}isItemHorizontallyInsideArea(t,e){if(!e.width||!e.height)return!1;const i=e.x+e.width;return t.position.actualLeft>=e.x&&t.position.actualLeft<=i||t.position.actualRight>=e.x&&t.position.actualRight<=i||t.position.actualLeft<=e.x&&t.position.actualRight>=i||t.position.actualLeft>=e.x&&t.position.actualRight<=i}isMulti(){const t=this.pointerData.events.move;return t&&this.data.multiKey&&this.modKeyPressed(this.data.multiKey,t)}getItemsUnderSelectionArea(t){const e=this.state.get("$data.chart.visibleItems"),i=this.api.getItems(e);let s=[];const a=[];for(let e of i){e=this.merge({},e);const i=this.api.getItemData(e.id);if(this.isItemVerticallyInsideArea(i,t)&&this.isItemHorizontallyInsideArea(i,t)){s.find(t=>t===e.id)||s.push(e.id);const t=this.collectLinkedItems(e.id);for(const e of t){const t=this.api.getItem(e);s.find(e=>e===t.id)||(s.push(t.id),a.push(t.id))}}}return s=s.map(t=>(this.api.getItem(t).selected=!0,t)),{selectedItems:s,automaticallySelectedItems:a}}isCellVerticallyInsideArea(t,e){if(!e.width||!e.height)return!1;const i=e.y+e.height,s=t.top,a=s+t.row.$data.actualHeight;return s>=e.y&&s<=i||a>=e.y&&a<=i||s>=e.y&&a<=i||s<=e.y&&a>=i}isCellHorizontallyInsideArea(t,e){if(!e.width||!e.height)return!1;const i=e.x+e.width,s=t.time.currentView.leftPx,a=t.time.currentView.rightPx;return s>=e.x&&s<=i||a>=e.x&&a<=i||s<=e.x&&a>=i||s>=e.x&&a<=i}getCellsUnderSelectionArea(t){const e=this.state.get("$data.chart.grid.cells"),i=[];for(const s in e){const a=e[s];this.isCellVerticallyInsideArea(a,t)&&this.isCellHorizontallyInsideArea(a,t)&&(i.find(t=>t===a.id)||i.push(a.id))}return{selectedCells:i}}updateItems(t){if(!this.data.items)return t;const i=Object.values(this.api.getAllItems()),s=i.filter(t=>t.selecting).map(t=>t.id).join("|"),a=this.data.selecting[e].join("|"),l=i.filter(t=>t.selected).map(t=>t.id).join("|"),n=this.data.selected[e].join("|");if(s===a&&l===n)return t;t=(t=t.update("config.chart.items.*.selected",!1)).update("config.chart.items.*.selecting",!1);const c=Array.from(new Set([...this.data.selecting[e],...this.data.selected[e]]));for(const i of c){const s=this.data.selecting[e].includes(i),a=this.data.selected[e].includes(i);t=(t=t.update(`config.chart.items.${i}.selecting`,s)).update(`config.chart.items.${i}.selected`,a)}return t}updateCells(e){if(!this.data.cells)return e;const i=this.api.getGridCells(),s=i.filter(t=>t.selecting).map(t=>t.id).join("|"),a=this.data.selecting[t].join("|"),l=i.filter(t=>t.selected).map(t=>t.id).join("|"),n=this.data.selected[t].join("|");return s===a&&l===n||e.update("$data.chart.grid.cells",e=>{for(const i in e){const s=e[i];s.selected=this.data.selected[t].includes(s.id),s.selecting=this.data.selecting[t].includes(s.id)}return e}),e}deselectItems(){if(!this.data.items)return;this.data.selected[e].length=0,this.data.selecting[e].length=0;let t=this.state.multi();t=this.updateItems(t),t.done()}deselectCells(){if(!this.data.cells)return;this.data.selecting[t].length=0,this.data.selected[t].length=0;let e=this.state.multi();e=this.updateCells(e),e.done()}getSelectionWithData(i){const s=this.state.get("config.chart.items"),a=this.state.get("$data.chart.grid.cells");return{[t]:i[t].map(t=>a[t]?a[t]:t),[e]:i[e].map(t=>s[t]?s[t]:t)}}onSelecting(i,s){const a=this.getSelectionWithData(i),l=this.getSelectionWithData(s),n=this.data.onSelecting(a,l);return{[t]:n[t].map(t=>"string"!=typeof t?t.id:t),[e]:n[e].map(t=>"string"!=typeof t?t.id:t)}}onSelected(i,s){const a=this.getSelectionWithData(i),l=this.getSelectionWithData(s),n=this.data.onSelected(a,l);return{[t]:n[t].map(t=>"string"!=typeof t?t.id:t),[e]:n[e].map(t=>"string"!=typeof t?t.id:t)}}updateBodyClass(){this.data.isSelecting?document.body.classList.add(this.data.bodySelectingClassName):document.body.classList.remove(this.data.bodySelectingClassName),this.data.selected[t].length||this.data.selected[e].length?document.body.classList.add(this.data.bodySelectedClassName):document.body.classList.remove(this.data.bodySelectedClassName)}selectMultipleCellsAndItems(){if(!this.canSelect())return;if(!this.data.multipleSelection)return this.deselectItems(),this.deselectCells(),void this.updateData();this.data.isSelecting=!0,this.data.selectionAreaLocal=this.getSelectionAreaLocal(),this.data.selectionAreaGlobal=this.translateAreaLocalToGlobal(this.data.selectionAreaLocal);const i={[t]:[],[e]:[]},s=this.isMulti();if(this.data.cells){const{selectedCells:e}=this.getCellsUnderSelectionArea(this.data.selectionAreaLocal);0===e.length?(i[t].length=0,s||(this.data.selected[t].length=0)):i[t]=e}if(this.data.items){const{selectedItems:t,automaticallySelectedItems:a}=this.getItemsUnderSelectionArea(this.data.selectionAreaLocal);this.data.automaticallySelected[e]=a,0===t.length?(i[e].length=0,s||(this.data.selected[e].length=0)):i[e]=t}if(this.data.cells||this.data.items){this.data.selecting=this.onSelecting(i,this.api.mergeDeep({},this.data.lastSelected));let t=this.state.multi();this.data.cells&&(t=this.updateCells(t)),this.data.items&&(t=this.updateItems(t)),t.done()}}selectItemsIndividually(){if(this.data.isSelecting=!1,this.data.selectionAreaLocal=this.getSelectionAreaLocal(),this.data.currentPosition=this.pointerData.currentPosition,this.data.initialPosition=this.pointerData.initialPosition,!this.data.items)return;if(!this.canSelect())return;const i=this.merge({},this.pointerData.targetData);if(this.data.selected[e].includes(i.id))return;let{selected:s,automaticallySelected:a}=this.getSelectedItem(i);s.length>1&&!this.data.multipleSelection&&(s=[i.id],a=[]),this.isMulti()?i.selected?this.data.selected[e]=s.filter(t=>t!==i.id&&!a.includes(t)):this.data.selected[e]=s:(this.data.selected[e]=s,this.data.selected[t].length=0),this.data.automaticallySelected[e]=a,this.data.selected=this.onSelected(this.api.mergeDeep({},this.data.selected),this.api.mergeDeep({},this.data.lastSelected));let l=this.state.multi();l=this.updateCells(l),l=this.updateItems(l),l.done()}removeMultiUnselected(t){const e=this.data.selected[t].filter(e=>this.data.selecting[t].includes(e)),i=[...this.data.selected[t],...this.data.selecting[t]];return Array.from(new Set(i.filter(t=>!e.includes(t))))}finishSelection(){if(!this.canSelect())return;let i;i=this.isMulti()?{[t]:this.data.cells?this.removeMultiUnselected(t):[],[e]:this.data.items?this.removeMultiUnselected(e):[]}:{[t]:this.data.cells?[...this.data.selecting[t]]:[],[e]:this.data.items?[...this.data.selecting[e]]:[]},this.data.selected=this.onSelected(i,this.api.mergeDeep({},this.data.lastSelected)),this.data.lastSelected=this.api.mergeDeep({},this.data.selected),this.data.cells&&(this.data.selecting[t].length=0),this.data.items&&(this.data.selecting[e].length=0);let s=this.state.multi();s=this.updateItems(s),s=this.updateCells(s),s.done()}onPointerData(){this.pointerData.isMoving&&this.pointerData.targetType===t&&this.data.rectangularSelection?this.selectMultipleCellsAndItems():this.pointerData.isMoving&&this.pointerData.targetType===t&&!this.data.rectangularSelection?this.deselectItems():this.pointerData.targetType===e?this.selectItemsIndividually():this.pointerData.isMoving||(this.data.isSelecting&&this.finishSelection(),this.data.isSelecting=!1),this.pointerData.isMoving&&this.pointerData.targetType!==t&&this.pointerData.targetType!==e&&this.deselectItems(),this.data.events=this.pointerData.events,this.data.pointerState=this.pointerData.pointerState,this.data.targetType=this.pointerData.targetType,this.data.targetData=this.pointerData.targetData,this.updateData(),this.updateBodyClass()}slot(){let t,e=!0;return i=>(e=!0,this.canSelect()&&this.data.isSelecting&&this.data.showOverlay&&this.data.multipleSelection&&this.data.rectangularSelection&&(this.slotStyleMap.style.display="block",this.slotStyleMap.style.left=this.data.selectionAreaLocal.x+"px",this.slotStyleMap.style.top=this.data.selectionAreaLocal.y+"px",this.slotStyleMap.style.width=this.data.selectionAreaLocal.width+"px",this.slotStyleMap.style.height=this.data.selectionAreaLocal.height+"px",e=!1),t=this.html`<div class=${this.slotClassName} style=${this.slotStyleMap}></div>`,this.html`${i}${e?null:t}`)}updateSelectionClassName(t,e){const i="boolean"==typeof e.selected?e.selected:e.item.selected,s="boolean"==typeof e.selecting?e.selecting:e.item.selecting;i?(t.classList.add(this.data.selectedClassName),t.classList.remove(this.data.selectingClassName)):t.classList.remove(this.data.selectedClassName),s?(t.classList.add(this.data.selectingClassName),t.classList.remove(this.data.selectedClassName)):t.classList.remove(this.data.selectingClassName)}selectedAction(t,e){return this.updateSelectionClassName(t,e),{update:this.updateSelectionClassName,destroy:this.updateSelectionClassName}}onCellCreate(e){return e.selected=!!this.data.selected[t].find(t=>t===e.id),e.selecting=!!this.data.selecting[t].find(t=>t===e.id),e.content}}function l(t={}){return t=function(t){const e={enabled:!0,cells:!0,items:!0,showOverlay:!0,rectangularSelection:!0,multipleSelection:!0,selectedClassName:"gstc__selected",selectingClassName:"gstc__selecting",bodySelectedClassName:"gstc__is-selected",bodySelectingClassName:"gstc__is-selecting",onSelecting:t=>t,onSelected:t=>t};return Object.assign(Object.assign({},e),t)}(t),function(e){const s=e.api.mergeDeep,l=e.state.get(i);l&&(t=s({},t,l));return new a(e,t).destroy}}export{l as Plugin};
