!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).ItemTypes={})}(this,(function(t){"use strict";const e="config.plugin.ItemTypes",i="config.templates.chart-timeline-items-row-item",s={task({className:t,labelClassName:e,detach:i,shouldDetach:s,actions:a,styleMap:l,slots:n,cutterLeft:o,cutterRight:c,getContent:p,vido:h,props:$}){const{itemData:r,item:d}=$,g=r.position.left!==r.position.actualLeft,u=r.position.right!==r.position.actualRight,m=r.actualWidth,f=r.actualHeight,y=Math.min(8,f/2);let L=[`M ${y} ${f}`,`Q 0 ${f} 0 ${f-y}`,`L 0 ${y}`,`Q 0 0 ${y} 0`,`L ${m-y} 0`,`Q ${m} 0 ${m} ${y}`,`L ${m} ${f-y}`,`Q ${m} ${f} ${m-y} ${f}`,`L ${y} ${f}`].join(" ");g&&!u?L=["M 0 0",`L ${m-y} 0`,`Q ${m} 0 ${m} ${y}`,`L ${m} ${f-y}`,`Q ${m} ${f} ${m-y} ${f}`,`L 0 ${f}`].join(" "):g&&u?L=["M 0 0",`L ${m} 0`,`L ${m} ${f}`,`L 0 ${f}`].join(" "):!g&&u&&(L=[`M ${y} ${f}`,`Q 0 ${f} 0 ${f-y}`,`L 0 ${y}`,`Q 0 0 ${y} 0`,`L ${m} 0`,`L ${m} ${f}`,`L ${y} ${f}`].join(" "));const _=`gstc__clip-path-${d.id}`,w=`gstc__pattern-${d.id}`,v=void 0===d.progress?100:d.progress,j=r.width-r.width/100*v;let b=r.width-j;g&&(b+=r.position.left),b<0&&(b=0);const x=[`M ${b} 0`,`L ${m} 0`,`L ${m} ${f}`,`L ${b} ${f}`].join(" "),M=d.fill?d.fill:"#e74c3c",H=`gstc__item-type gstc__item-type--${d.type} `,T=m>=0?h.svg`<svg width=${m} height=${r.actualHeight} xmlns="http://www.w3.org/2000/svg">
          <defs>
            <clipPath id=${_}>
              <path d=${L}></path>
            </clipPath>
            <pattern
              id=${w}
              width="20"
              height="20"
              patternTransform="rotate(45 0 0)"
              patternUnits="userSpaceOnUse"
            >
              <line
                class="gstc__item-type-progress-line"
                x1="0"
                y1="0"
                x2="0"
                y2="20"
              />
            </pattern>
          </defs>
          <path class="gstc__item-type-item" d=${L} fill=${M} />
          <path
            class="gstc__item-type-progress"
            clip-path="url(#${_})"
            d=${x}
            style="fill: url('#${w}');" />
          <foreignObject clip-path="url(#${_})" x="0" y="0" width="100%" height="100%">
            <div class="gstc__item-type-content" xmlns="http://www.w3.org/1999/xhtml">
              ${n.html("inner",h.html`<div class=${H+e}>${n.html("content",p())}</div>`)}
            </div>
          </foreignObject>
        </svg>`:null;return n.html("outer",h.html`
        <div detach=${i(s)} class=${H+t} data-actions=${a()} style=${l.directive()}>
          ${T}
        </div>
      `)},milestone({className:t,labelClassName:e,detach:i,actions:s,styleMap:a,shouldDetach:l,slots:n,cutterLeft:o,cutterRight:c,getContent:p,vido:h,props:$}){const{itemData:r,item:d}=$,g=16,u=r.actualWidth,m=r.actualHeight,f=r.position.left!==r.position.actualLeft,y=r.position.right!==r.position.actualRight;let L=["M 0 "+r.actualHeight/2,`L ${u>=32?g:u/2} 0`,`L ${u>=32?u-g:u/2} 0`,`L ${u} ${r.actualHeight/2}`,`L ${u>=32?u-g:u/2} ${r.actualHeight}`,`L ${u>=32?g:u/2} ${r.actualHeight}`,"L 0 "+r.actualHeight/2].join(" ");f&&!y?L=["M 0 0",`L ${u>=32?u-g:u/2} 0`,`L ${u} ${r.actualHeight/2}`,`L ${u>=32?u-g:u/2} ${r.actualHeight}`,`L 0 ${m}`].join(" "):f&&y?L=["M 0 0",`L ${u} 0`,`L ${u} ${m}`,`L 0 ${m}`].join(" "):!f&&y&&(L=["M 0 "+r.actualHeight/2,`L ${u>=32?g:u/2} 0`,`L ${u} 0`,`L ${u} ${m}`,`L ${u>=32?g:u/2} ${r.actualHeight}`,"L 0 "+r.actualHeight/2].join(" "));const _=`gstc__clip-path-${d.id}`,w=`gstc__pattern-${d.id}`,v=void 0===d.progress?100:d.progress,j=r.width-r.width/100*v;let b=r.width-j;f&&(b+=r.position.left),b<0&&(b=0);const x=[`M ${u} 0`,`L ${u} ${m}`,`L ${b} ${m}`,`L ${b} 0`].join(" "),M=d.fill?d.fill:"#e74c3c",H=`gstc__item-type gstc__item-type--${d.type} `,T=u>=0?h.svg`<svg width=${u} height=${r.actualHeight} xmlns="http://www.w3.org/2000/svg">
          <defs>
            <clipPath id=${_}>
              <path d=${L}></path>
            </clipPath>
            <pattern
              id=${w}
              width="20"
              height="20"
              patternTransform="rotate(45 0 0)"
              patternUnits="userSpaceOnUse"
            >
              <line
                class="gstc__item-type-progress-line"
                x1="0"
                y1="0"
                x2="0"
                y2="20"
              />
            </pattern>
          </defs>
          <path class="gstc__item-type-item" d=${L} stroke="none" fill=${M} />
          <path
            class="gstc__item-type-progress"
            clip-path="url(#${_})"
            d=${x}
            style="fill: url('#${w}');" />
          <foreignObject clip-path="url(#${_})" x="0" y="0" width="100%" height="100%">
            <div class="gstc__item-type-content" xmlns="http://www.w3.org/1999/xhtml">
              ${n.html("inner",h.html`<div class=${H+e}>${n.html("content",p())}</div>`)}
            </div>
          </foreignObject>
        </svg>`:null;return n.html("outer",h.html`
        <div detach=${i(l)} class=${H+t} data-actions=${s()} style=${a.directive()}>
          ${T}
        </div>
      `)},project({className:t,labelClassName:e,detach:i,shouldDetach:s,actions:a,styleMap:l,slots:n,cutterLeft:o,cutterRight:c,getContent:p,vido:h,props:$}){const{itemData:r,item:d}=$,g=r.actualWidth,u=r.actualHeight,m=r.position.left!==r.position.actualLeft,f=["M 0 0",`L ${g} 0`,`L ${g} ${u}`,`L 0 ${u}`].join(" "),y=`gstc__clip-path-${d.id}`,L=`gstc__pattern-${d.id}`,_=void 0===d.progress?100:d.progress,w=r.width-r.width/100*_;let v=r.width-w;m&&(v+=r.position.left),v<0&&(v=0);const j=[`M ${g} 0`,`L ${g} ${u}`,`L ${v} ${u}`,`L ${v} 0`].join(" "),b=d.fill?d.fill:"#e74c3c",x=`gstc__item-type gstc__item-type--${d.type} `,M=g>=0?h.svg`<svg width=${g} height=${r.actualHeight} xmlns="http://www.w3.org/2000/svg">
          <defs>
            <clipPath id=${y}>
              <path d=${f}></path>
            </clipPath>
            <pattern
              id=${L}
              width="20"
              height="20"
              patternTransform="rotate(45 0 0)"
              patternUnits="userSpaceOnUse"
            >
              <line
                class="gstc__item-type-progress-line"
                x1="0"
                y1="0"
                x2="0"
                y2="20"
              />
            </pattern>
          </defs>
          <path class="gstc__item-type-item" d=${f} fill=${b} />
          <path
            class="gstc__item-type-progress"
            clip-path="url(#${y})"
            d=${j}
            style="fill: url('#${L}');" />
          <foreignObject clip-path="url(#${y})" x="0" y="0" width="100%" height="100%">
            <div class="gstc__item-type-content" xmlns="http://www.w3.org/1999/xhtml">
              ${n.html("inner",h.html`<div class=${x+e}>${n.html("content",p())}</div>`)}
            </div>
          </foreignObject>
        </svg>`:null;return n.html("outer",h.html`
        <div detach=${i(s)} class=${x+t} data-actions=${a()} style=${l.directive()}>
          ${M}
        </div>
      `)}};class a{constructor(t,a){this.unsub=[],this.options=function(t){return Object.assign(Object.assign({},s),t)}(t),this.vido=a,this.state=a.state,this.api=a.api,this.componentTemplate=this.componentTemplate.bind(this),this.destroy=this.destroy.bind(this),this.state.update(e,this.options),this.state.update(i,(()=>this.componentTemplate)),this.unsub.push(this.state.subscribe(e,(t=>this.options=t))),this.api.pluginInitialized("ItemTypes")}destroy(){this.unsub.forEach((t=>t())),this.state.update(i,null),this.vido.api.pluginDestroyed("ItemTypes")}componentTemplate(t){const e=t.props.item;if(!e)return null;const i=e.type;if(!i)throw new Error(`Item (${e.id}) must have a 'type' {string} property 'task', 'milestone' or 'project'.`);return this.options[i](t)}}t.Plugin=function(t={}){return function(i){const s=i.state.get(e);s&&(t=i.api.mergeDeep({},t,s));return new a(t,i).destroy}},t.pluginPath=e,t.templatePath=i,Object.defineProperty(t,"__esModule",{value:!0})}));
