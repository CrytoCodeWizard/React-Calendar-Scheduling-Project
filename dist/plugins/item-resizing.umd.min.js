!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).ItemResizing={})}(this,(function(t){"use strict";
/**
 * TimelinePointer plugin
 *
 * @copyright NEURONET - Rafal Pospiech
 * @author    Rafal Pospiech <neuronet.io@gmail.com>
 * @module    gantt-schedule-timeline-calendar
 * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar
 * @link      https://gantt-schedule-timeline-calendar.neuronet.io
 * @version   3.22.0
 * @released  2022-06-27
 * @license   SEE LICENSE IN LICENSE FILE
 */const e="chart-timeline-items-row-item",i="gstc";
/**
 * Gantt-Schedule-Timeline-Calendar helpers
 *
 * @copyright NEURONET - Rafal Pospiech
 * @author    Rafal Pospiech <neuronet.io@gmail.com>
 * @module    gantt-schedule-timeline-calendar
 * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar
 * @link      https://gantt-schedule-timeline-calendar.neuronet.io
 * @version   3.22.0
 * @released  2022-06-27
 * @license   SEE LICENSE IN LICENSE FILE
 */function s(t,e=""){let s=`gstc__${t}`;return t===i&&(s=i),e?`${s} ${s}--${e.replace(":","-")}`:s}
/**
 * ItemResizing plugin
 *
 * @copyright NEURONET - Rafal Pospiech
 * @author    Rafal Pospiech <neuronet.io@gmail.com>
 * @module    gantt-schedule-timeline-calendar
 * @link      https://github.com/neuronetio/gantt-schedule-timeline-calendar
 * @link      https://gantt-schedule-timeline-calendar.neuronet.io
 * @version   3.22.0
 * @released  2022-06-27
 * @license   SEE LICENSE IN LICENSE FILE
 */const a=s("chart-timeline-items-row-item-resizing-handle-content-line");const n="config.plugin.ItemResizing",o="chart-timeline-items-row-item-resizing-handle",h=s(o),d="--left",l="--right";class r{constructor(t,e){this.onDestroy=[],this.scrollWaiting=0,this.vido=t,this.state=t.state,this.api=t.api,this.data=function(t={}){const e={onStart:({items:t})=>t.after,onResize:({items:t})=>t.after,onEnd:({items:t})=>t.after},i={start:({startTime:t,time:e})=>t.startOf(e.period),end:({endTime:t,time:e})=>t.endOf(e.period)},s={width:18,horizontalMargin:0,verticalMargin:0,outside:!1,outsideWidth:14,outsideHorizontalMargin:6,onlyWhenSelected:!0},a=Object.assign({enabled:!0,dependant:!0,addedDependantIds:[],selectedIds:[],debug:!1,state:"",content:null,bodyClass:"gstc-items-resizing",bodyClassLeft:"gstc-items-resizing-left",bodyClassRight:"gstc-items-resizing-right",outsideWidthThreshold:100,movement:{px:0,time:0},initialItems:[],initialItemsData:{},initialHorizontalScroll:null,leftIsMoving:!1,rightIsMoving:!1,handle:Object.assign({},s),events:Object.assign({},e),snapToTime:Object.assign({},i),autoScroll:{speed:1,edgeThreshold:0},ignoreMissingDates:!0},t);return t.snapToTime&&(a.snapToTime=Object.assign(Object.assign({},i),t.snapToTime)),t.events&&(a.events=Object.assign(Object.assign({},e),t.events)),t.handle&&(a.handle=Object.assign(Object.assign({},s),t.handle)),t.autoScroll&&(a.autoScroll=Object.assign(Object.assign({},a.autoScroll),t.autoScroll)),a}(e),this.html=t.html,this.data.content||(this.data.content={left:this.html`<div class=${a}></div><div class=${a}></div>`,right:this.html`<div class=${a}></div><div class=${a}></div>`}),this.innerSlot=this.innerSlot.bind(this),this.outerSlot=this.outerSlot.bind(this),this.onRightPointerDown=this.onRightPointerDown.bind(this),this.onRightPointerMove=this.onRightPointerMove.bind(this),this.onRightPointerUp=this.onRightPointerUp.bind(this),this.onLeftPointerDown=this.onLeftPointerDown.bind(this),this.onLeftPointerMove=this.onLeftPointerMove.bind(this),this.onLeftPointerUp=this.onLeftPointerUp.bind(this),this.destroy=this.destroy.bind(this),this.updateData(),this.onDestroy.push(this.state.subscribe("$data.elements.chart-timeline",(t=>this.timelineElement=t))),this.onDestroy.push(this.state.subscribe("config.plugin.ItemResizing",(t=>{t.enabled?document.body.classList.add(t.bodyClass):document.body.classList.remove(t.bodyClass),this.data=t}))),this.onDestroy.push(this.state.subscribe("config.plugin.TimelinePointer",(t=>{this.pointerData=t,this.onPointerData()}))),this.state.update("config.slots.chart-timeline-items-row-item.inner",(t=>(t.includes(this.innerSlot)||t.push(this.innerSlot),t))),this.state.update("config.slots.chart-timeline-items-row-item.outer",(t=>(t.includes(this.outerSlot)||t.push(this.outerSlot),t)))}destroy(){this.onDestroy.forEach((t=>t())),this.state.update("config.slots.chart-timeline-items-row-item.inner",(t=>t.filter((t=>t!==this.innerSlot)))),this.state.update("config.slots.chart-timeline-items-row-item.outer",(t=>t.filter((t=>t!==this.outerSlot)))),this.api.pluginDestroyed("ItemResizing")}updateData(){this.state.update(n,this.data)}setUpClasses(t=!1){this.leftClassName=this.api.getClass(o),this.leftClassName+=" "+this.leftClassName+d,this.rightClassName=this.api.getClass(o),this.rightClassName+=" "+this.rightClassName+l,t&&(this.leftClassName+=` ${this.api.getClass(o)}--left-outside`,this.rightClassName+=` ${this.api.getClass(o)}--right-outside`)}getSelectedItems(){return this.state.get(`config.plugin.Selection.selected.${e}`).map((t=>this.api.mergeDeep({},this.api.getItem(t))))}getSelectedItemsData(t){const e={};for(const i of t)e[i.id]=this.api.mergeDeep({},this.api.getItemData(i.id));return e}updateRightStyleMap(t,e){const i=this.api.getItemData(t.id);return e.style.top="0px",this.data.handle.outside||i.actualWidth<this.data.outsideWidthThreshold?(e.style.position="absolute",e.style.left=i.position.actualRight+this.data.handle.outsideHorizontalMargin+"px",e.style.width=this.data.handle.outsideWidth+"px",e.style.top=i.position.actualRowTop+"px",this.setUpClasses(!0)):(e.style.position="static",e.style.width=this.data.handle.width+"px",this.setUpClasses(!1)),e.style.height=i.actualHeight-2*this.data.handle.verticalMargin+"px",i.position.right!==i.position.actualRight?e.style.display="none":e.style.display="flex",e}updateLeftStyleMap(t,e){const i=this.api.getItemData(t.id);return e.style.top="0px",this.data.handle.outside||i.actualWidth<this.data.outsideWidthThreshold?(e.style.position="absolute",e.style.left=i.position.actualLeft-(this.data.handle.outsideWidth+this.data.handle.outsideHorizontalMargin)+"px",e.style.width=this.data.handle.outsideWidth+"px",e.style.top=i.position.actualRowTop+"px",this.setUpClasses(!0)):(e.style.position="static",e.style.left=this.data.handle.horizontalMargin+"px",e.style.width=this.data.handle.width+"px",this.setUpClasses(!1)),e.style.height=i.actualHeight-2*this.data.handle.verticalMargin+"px",i.position.left!==i.position.actualLeft?e.style.display="none":e.style.display="flex",e}getEventArgument(t){const e=this.api.getAllItems(),i=[];for(const s of t)i.push(this.api.mergeDeep({},e[s.id]));return{items:{initial:this.data.initialItems,before:i,after:t},addedDependantIds:this.data.addedDependantIds,selectedIds:this.data.selectedIds,vido:this.vido,state:this.state,time:this.state.get("$data.chart.time")}}getDependantItems(t){const e=[],i=this.api.getItemsData();for(const s of t)for(const t of i[s.id].dependant)e.includes(t)||e.push(t);const s=this.state.get("config.chart.items");return e.map((t=>s[t])).map((t=>this.api.mergeDeep({},t)))}dispatchEvent(t,e,i=null){"onStart"===t&&(this.api.muteMethod("fixOverlapped"),this.api.muteMethod("fullReload"),this.api.muteMethod("recalculateRowPercents"),this.api.muteMethod("getLastPageRowsHeight"),this.api.muteMethod("calculateVerticalScrollArea"),this.api.muteMethod("heightChange"),this.api.muteMethod("calculateRowsHeight"),this.api.muteMethod("updateVisibleItemsListener"),this.api.muteMethod("prepareExpanded"),0===this.data.autoScroll.speed&&0===this.data.autoScroll.speed&&(this.api.muteMethod("generateVisibleRowsAndItems"),this.api.muteMethod("calculateVisibleRowsHeights"),this.api.muteMethod("prepareExpanded"))),"onEnd"===t&&(this.api.unmuteMethod("fixOverlapped"),this.api.unmuteMethod("heightChange"),this.api.unmuteMethod("calculateVerticalScrollArea"),this.api.unmuteMethod("getLastPageRowsHeight"),this.api.unmuteMethod("recalculateRowPercents"),this.api.unmuteMethod("fullReload"),this.api.unmuteMethod("calculateRowsHeight"),this.api.unmuteMethod("updateVisibleItemsListener"),this.api.unmuteMethod("prepareExpanded"),0===this.data.autoScroll.speed&&0===this.data.autoScroll.speed&&(this.api.unmuteMethod("generateVisibleRowsAndItems"),this.api.unmuteMethod("calculateVisibleRowsHeights"),this.api.unmuteMethod("prepareExpanded"))),e=e.map((t=>this.api.mergeDeep({},t)));const s=this.data.events[t](this.getEventArgument(e));let a=this.state.multi(!0);const n=this.state.get("config.chart.items");for(const t of s){let e=!1;const s=n[t.id];t.time.start===s.time.start&&t.time.end===s.time.end||(e=!0,a=a.update(`config.chart.items.${t.id}.time`,t.time)),i&&e&&(a=a.update(`$data.chart.items.${t.id}`,this.api.mergeDeep({},i[t.id])))}a.done(),"onEnd"===t&&this.api.main.partialReload(!1)}getItemsForDiff(){const t=this.getSelectedItems()[0],e=this.data.initialItems.find((e=>e.id===t.id));return{modified:t,original:e}}onPointerData(){this.data.enabled&&("down"===this.pointerData.pointerState&&this.pointerData.targetType===e?this.api.plugins.TimelinePointer.isLocked("down")||this.onPointerDown():"move"===this.pointerData.pointerState&&this.pointerData.targetType===e?"item-resizing"===this.api.plugins.TimelinePointer.isLocked("move")&&this.onPointerMove():"up"===this.pointerData.pointerState&&this.pointerData.targetType===e&&"item-resizing"===this.api.plugins.TimelinePointer.isLocked("up")&&this.onPointerUp())}onPointerDown(){const t=this.pointerData.currentTarget.closest("."+h);if(t&&!this.api.plugins.TimelinePointer.isLocked("down")){if(this.api.plugins.TimelinePointer.lock("down","item-resizing"),this.api.plugins.TimelinePointer.lock("move","item-resizing"),this.api.plugins.TimelinePointer.lock("up","item-resizing"),this.pointerData.events.down.preventDefault(),this.pointerData.events.down.stopPropagation(),this.data.dependant){const t=this.getSelectedItems();this.data.selectedIds=t.map((t=>t.id));const e=this.getDependantItems(t).filter((t=>!this.data.selectedIds.includes(t.id)));this.data.addedDependantIds=e.map((t=>t.id)),this.data.initialItems=[...t,...e]}else this.data.initialItems=this.getSelectedItems(),this.data.addedDependantIds=[],this.data.selectedIds=this.data.initialItems.map((t=>t.id));this.data.initialItemsData=this.getSelectedItemsData(this.data.initialItems),this.data.initialHorizontalScroll=this.api.mergeDeep({},this.state.get("$data.scroll.horizontal")),""!==this.data.state&&"end"!==this.data.state||(this.data.state="resize"),t.classList.contains(h+d)&&this.onLeftPointerDown(),t.classList.contains(h+l)&&this.onRightPointerDown(),this.dispatchEvent("onStart",this.data.initialItems)}}onLeftPointerDown(){this.data.enabled&&(document.body.classList.add(this.data.bodyClassLeft),this.data.leftIsMoving=!0,this.updateData())}onRightPointerDown(){this.data.enabled&&(document.body.classList.add(this.data.bodyClassRight),this.data.rightIsMoving=!0,this.updateData())}scrollLeft(){if(this.data.autoScroll.speed&&!this.state.get("config.chart.time.calculatedZoomMode")){if(this.scrollWaiting++,this.data.autoScroll.speed<0){if(this.scrollWaiting-1<Math.abs(this.data.autoScroll.speed))return;const t=this.api.getScrollLeft();this.api.setScrollLeft(t.dataIndex-1)}else if(this.data.autoScroll.speed>0){const t=this.api.getScrollLeft();this.api.setScrollLeft(t.dataIndex-this.data.autoScroll.speed)}this.scrollWaiting=0}}scrollRight(){if(this.data.autoScroll.speed&&!this.state.get("config.chart.time.calculatedZoomMode")){if(this.scrollWaiting++,this.data.autoScroll.speed<0){if(this.scrollWaiting-1<Math.abs(this.data.autoScroll.speed))return;const t=this.api.getScrollLeft();this.api.setScrollLeft(t.dataIndex+1)}else if(this.data.autoScroll.speed>0){const t=this.api.getScrollLeft();this.api.setScrollLeft(t.dataIndex+this.data.autoScroll.speed)}this.scrollWaiting=0}}autoScroll(){if(!this.timelineElement)return;const t=this.pointerData.currentPosition.x,e=this.timelineElement.getBoundingClientRect();t<this.data.autoScroll.edgeThreshold?this.scrollLeft():t>e.width-this.data.autoScroll.edgeThreshold&&this.scrollRight()}onPointerMove(){if(!this.data.enabled)return;const{original:t,modified:e}=this.getItemsForDiff();t&&(this.data.movement={px:this.pointerData.movement.x,time:e.time.start-t.time.start},"resize"!==this.data.state&&"start"!==this.data.state||(this.data.state="resize"),this.pointerData.movement.x&&this.autoScroll(),this.data.leftIsMoving&&this.onLeftPointerMove(),this.data.rightIsMoving&&this.onRightPointerMove())}onLeftPointerMove(){if(!this.data.enabled||!this.data.leftIsMoving)return;const t=this.getSelectedItems(),e={},i=this.state.get("$data.chart.time"),{original:s,modified:a}=this.getItemsForDiff(),n=this.data.movement={px:this.pointerData.movement.x,time:a.time.start-s.time.start},o=this.api.time.date(this.api.time.getTimeFromOffsetPx(this.pointerData.initialPosition.x,!0,i)),h=this.data.snapToTime.start({startTime:o,item:t[0],time:i,movement:n,vido:this.vido}),d=this.api.time.date(this.api.time.getTimeFromOffsetPx(this.pointerData.currentPosition.x,!0,i)),l=this.api.time.getDatesDiffPx(h,d,i,!0);for(let s=0,a=t.length;s<a;s++){const a=t[s],o=this.api.mergeDeep({},this.api.getItemData(a.id));let h=this.api.mergeDeep({},this.data.initialItemsData[a.id]).position.left+l;h>o.position.right-a.minWidth&&(h=o.position.right-a.minWidth);const d=this.api.time.getTimeFromOffsetPx(h,!0,i),r=this.data.snapToTime.start({startTime:this.api.time.date(d),item:a,time:i,movement:n,vido:this.vido});a.time.start=r.valueOf(),o.time.startDate=r,e[a.id]=o}this.dispatchEvent("onResize",t,e),this.updateData()}onRightPointerMove(){if(!this.data.enabled||!this.data.rightIsMoving)return;let t,e,i;if(this.data.dependant){const s=this.getSelectedItems();e=s.map((t=>t.id));const a=this.getDependantItems(s).filter((t=>!e.includes(t.id)));i=a.map((t=>t.id)),t=[...s,...a]}else t=this.getSelectedItems();const s={},a=this.state.get("$data.chart.time"),{original:n,modified:o}=this.getItemsForDiff(),h=this.data.movement={px:this.pointerData.movement.x,time:o.time.start-n.time.start},d=this.api.time.date(this.api.time.getTimeFromOffsetPx(this.pointerData.initialPosition.x,!0,a)),l=this.data.snapToTime.end({endTime:d,item:null,time:a,movement:h,vido:this.vido}),r=this.api.time.date(this.api.time.getTimeFromOffsetPx(this.pointerData.currentPosition.x,!0,a)),p=this.api.time.getDatesDiffPx(l,r,a,!0);for(let e=0,n=t.length;e<n;e++){const n=t[e],o=this.api.mergeDeep({},this.api.getItemData(n.id)),l=this.api.mergeDeep({},this.data.initialItemsData[n.id]),r=i.includes(n.id);let m=l.position.left+l.timeWidth+p;!r&&m<o.position.left+n.minWidth&&(m=o.position.left+n.minWidth);const c=this.api.time.getTimeFromOffsetPx(m,!0,a),g=this.data.snapToTime.end({endTime:this.api.time.date(c),item:n,time:a,movement:h,vido:this.vido});if(r){const t=this.data.snapToTime.start({startTime:d,item:n,time:a,movement:h,vido:this.vido}),e=this.api.time.date(this.api.time.getTimeFromOffsetPx(this.pointerData.currentPosition.x,!0,a)),i=this.api.time.getDatesDiffPx(t,e,a,!0),s=l.position.left+i,r=this.api.time.getTimeFromOffsetPx(s,!0,a),p=this.data.snapToTime.start({startTime:this.api.time.date(r),item:n,time:a,movement:h,vido:this.vido});n.time.start=p.valueOf(),o.time.startDate=p}n.time.end=g.valueOf(),o.time.endDate=g,s[n.id]=o}this.dispatchEvent("onResize",t,s),this.updateData()}onEnd(){const t=this.getSelectedItems();this.dispatchEvent("onEnd",t)}onPointerUp(){"resize"===this.data.state&&(this.data.state="end"),this.onLeftPointerUp(),this.onRightPointerUp(),this.onEnd(),this.updateData(),this.api.plugins.TimelinePointer.unlock("down"),this.api.plugins.TimelinePointer.unlock("move"),this.api.plugins.TimelinePointer.unlock("up")}onLeftPointerUp(){document.body.classList.remove(this.data.bodyClassLeft),this.data.enabled&&this.data.leftIsMoving&&(this.data.leftIsMoving=!1,this.onEnd(),this.updateData())}onRightPointerUp(){document.body.classList.remove(this.data.bodyClassRight),this.data.enabled&&this.data.rightIsMoving&&(this.data.rightIsMoving=!1)}innerSlot(t,e){let i,s,a;const n=new t.StyleMap({}),o=new t.StyleMap({});return t.onChange((h=>{if(!(e=h)||!e.item)return;const d=e.item;if(!d)return;const l=this.api.getItemData(d.id);if(!l)return;let r;i=!l.detached,this.data.handle.onlyWhenSelected&&(i=i&&l.selected),i=i&&!(this.data.handle.outside||l.actualWidth<this.data.outsideWidthThreshold),this.updateRightStyleMap(d,o),this.updateLeftStyleMap(d,n),r="function"==typeof this.data.content?this.data.content({item:d,vido:t}):"object"!=typeof this.data.content||"left"in this.data.content?this.data.content:{left:this.data.content,right:this.data.content},s=this.html`<div class=${this.leftClassName} data-gstcid=${e.item.id} style=${n.directive()}>${r.left}</div>`,a=this.html`<div class=${this.rightClassName} data-gstcid=${e.item.id} style=${o.directive()}>${r.right}</div>`,t.update()})),t=>this.html`${i?s:null}${t}${i?a:null}`}outerSlot(t,i){let s,a,n;const o=new t.StyleMap({}),h=new t.StyleMap({});return t.onChange((d=>{if(!(i=d)||!i.item)return;const l=i.item;if(!l)return;const r=this.api.getItemData(l.id);if(!r)return;let p;s=!r.detached,this.data.handle.onlyWhenSelected&&(s=s&&r.selected),s=s&&(this.data.handle.outside||r.actualWidth<this.data.outsideWidthThreshold),this.updateRightStyleMap(l,h),this.updateLeftStyleMap(l,o),p="function"==typeof this.data.content?this.data.content({item:l,vido:t}):"object"!=typeof this.data.content||"left"in this.data.content?this.data.content:{left:this.data.content,right:this.data.content},a=this.html`<div class=${this.leftClassName} data-type=${e} data-gstcid=${i.item.id} style=${o.directive()}>${p.left}</div>`,n=this.html`<div class=${this.rightClassName} data-type=${e} data-gstcid=${i.item.id} style=${h.directive()}>${p.right}</div>`,t.update()})),t=>this.html`${s?a:null}${t}${s?n:null}`}}t.Plugin=function(t={}){return function(e){const i=e.api;if(!i.isPluginInitialized("TimelinePointer"))throw new Error("TimelinePointer plugin must be initialized before ItemResizing plugin.");if(!i.isPluginInitialized("Selection"))throw new Error("Selection plugin must be initialized before ItemResizing plugin.");if(i.isPluginInitialized("ItemMovement"))throw new Error("ItemResizing plugin must be initialized before ItemMovement plugin.");const s=e.state.get(n);s&&(t=e.api.mergeDeep({},t,s));const a=new r(e,t);return i.pluginInitialized("ItemResizing"),a.destroy}},Object.defineProperty(t,"__esModule",{value:!0})}));